name: Deploy Python script to Prod

# Limit permissions to only what's needed
permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-24.04

    # Prevent concurrent deployments
    concurrency: 
      group: production_deploy
      cancel-in-progress: true
    
    # Optional: Add environment protection rules
    environment:
      name: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Limit fetch depth for better security and performance
        fetch-depth: 1

    - name: Setup SSH Keys
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key

        # Dynamically fetch and add the known host key
        ssh-keyscan -t ed25519 $REMOTE_HOST >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts          

        
    - name: Deploy to Server
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
      run: |
        # Add error handling
        set -e

        # Validate remote path exists
        ssh -vvv -i ~/.ssh/deploy_key $REMOTE_USER@$REMOTE_HOST "[ -d $REMOTE_PATH ]"

        ssh -i ~/.ssh/deploy_key $REMOTE_USER@$REMOTE_HOST << EOF

          # Navigate to the project directory
          cd ${REMOTE_PATH}
          
          # Pull the latest code
          git pull origin main
          
          # Run the deployment script
          ./run-python-script.sh
        EOF
